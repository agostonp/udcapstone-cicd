AWSTemplateFormatVersion: '2010-09-09'
Description: >
    Create the Kubernetes Cluster and Nodegroup (Amazon EKS)
    Capstone project - CI/CD pipeline with Jenkins, Docker and Kubernetes 
    Udacity Could DevOps Nanodgree
    Agoston Pajzs
    CloudFormation template file

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    SshKey:
        Description: SSH key to be used to access servers
        Type: String

Resources:

    ControlPlaneSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Kubernetes Cluster communication with worker nodes
            VpcId: Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"


    KubeCluster:
        Type: 'AWS::EKS::Cluster'
        Properties:
            Name: !Ref EnvironmentName
            Version: '1.16'
            RoleArn:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKSClusterRoleArn"
            ResourcesVpcConfig:
                SecurityGroupIds:
                - !Ref ControlPlaneSecurityGroup
                SubnetIds:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PRI1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PRI2-SN"


    KubeNodesSSHSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow SSH to Kube (EKS) worker nodes - Change Dummy IP from console!
            VpcId:
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 1.2.3.4/32
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    KubeNodegroup:
        Type: 'AWS::EKS::Nodegroup'
        Properties:
            ClusterName:
                !Ref KubeCluster
            AmiType: AL2_x86_64
            DiskSize: 10
            InstanceTypes:
                - t2.micro
            NodegroupName: !Sub "${EnvironmentName}-EKSNodegroup"
            NodeRole: 
                Fn::ImportValue: !Sub "${EnvironmentName}-EKSWorkerNodeRoleArn"
            RemoteAccess:
                Ec2SshKey: !Ref SshKey
                SourceSecurityGroups:
                - !Ref KubeNodesSSHSecGroup
            ScalingConfig:
                MinSize: 2
                DesiredSize: 2
                MaxSize: 2
            Subnets:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PRI1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PRI2-SN"
            Labels:
                Environment: !Ref EnvironmentName
            Tags:
                Name: !Sub "${EnvironmentName} Group of Worker Nodes in Cluster"

Outputs: 

    ControlPlaneSecurityGroup:
        Description: Security group for the cluster control plane communication with worker nodes
        Value: !Ref ControlPlaneSecurityGroup
        Export:
          Name: !Sub "${EnvironmentName}-ControlPlaneSecurityGroup"

    KubeCluster: 
        Description: A reference to the created EKSCluster
        Value: !Ref KubeCluster
        Export:
          Name: !Sub ${EnvironmentName}-CLUSTER
