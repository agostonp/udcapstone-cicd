AWSTemplateFormatVersion: '2010-09-09'
Description: >
    Agoston Pajzs
    Udacity Could DevOps Nanodgree
    Capstone project - CI/CD pipeline with Jenkins, Docker and Kubernetes 
    This CloudFormation template file contains the IAM Roles required for the Kubernetes cluster (Amazon EKS)

Mappings:
    ServicePrincipals:
        aws-cn:
            ec2: ec2.amazonaws.com.cn
        aws-us-gov:
            ec2: ec2.amazonaws.com
        aws:
            ec2: ec2.amazonaws.com

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:

    eksClusterRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - eks.amazonaws.com
                  Action:
                  - sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Amazon EKS Cluster Role

    eksWorkerNodeRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - !FindInMap [ServicePrincipals, !Ref "AWS::Partition", ec2]
                  Action:
                  - "sts:AssumeRole"
            ManagedPolicyArns:
                - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
                - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
                - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
            Path: /
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Amazon EKS Worker Node Role

Outputs: 

    RoleArn:
        Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
        Value: !GetAtt eksClusterRole.Arn
        Export:
          Name: !Sub "${EnvironmentName}-EKSClusterRoleArn"

    NodeInstanceRole:
        Description: The node instance role
        Value: !GetAtt eksWorkerNodeRole.Arn
        Export:
          Name: !Sub "${EnvironmentName}-EKSWorkerNodeRoleArn"
